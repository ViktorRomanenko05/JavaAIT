Расширенное Задание: Управление Информацией о Странах с Поддержкой Пользовательских Профилей

Цель задания:

Разработать консольное приложение на Java, которое управляет информацией о странах и поддерживает профили пользователей с различными уровнями доступа. Информация должна храниться в файлах, и должна быть возможность работать с данными в зависимости от уровня доступа пользователя.

Функциональные требования:

Профили пользователей:
Администратор: Полный доступ ко всем функциям, включая добавление, чтение, обновление, и удаление данных о странах.
Пользователь: Ограниченный доступ, только чтение информации о странах.
Добавление информации о стране:
Только администраторы могут добавлять новые страны в систему. Данные включают название страны, столицу, население и площадь.
Чтение информации о странах:
Все пользователи могут читать и просматривать данные о странах.
Обновление информации о стране:
Только администраторы могут обновлять информацию о странах.
Удаление информации о стране:
Только администраторы могут удалять страны из системы.
Аутентификация и авторизация:
При запуске приложения пользователь должен ввести логин и пароль для идентификации уровня доступа.
Технические требования:

Использование Java I/O для чтения и записи файлов.
Реализация функциональности в виде консольного приложения.
Обработка исключений, связанных с вводом/выводом данных.
Хранение данных о пользователях и их правах доступа в отдельном файле.
Пример структуры файла users.txt:

admin,password1,admin
user,password2,user
Пример структуры файла countries.txt:

USA, Washington D.C., 331002651, 9372610
China, Beijing, 1439323776, 9596961
Задачи:

Создать классы Country и User с соответствующими полями.
Реализовать класс AuthenticationManager для управления аутентификацией пользователей.
Реализовать класс CountryManager, который будет обрабатывать чтение, запись, обновление и удаление данных о странах в зависимости от уровня доступа пользователя.
Разработать пользовательский интерфейс в классе Main, который позволяет пользователю аутентифицироваться и выбирать действия в зависимости от его прав.
Дополнительные задачи:

Логирование: Ведение журнала действий пользователей, особенно удаления данных и обновления.